name: Upload To Store

on:
  workflow_dispatch: # 수동으로 작업 실행
    inputs:
      track:
        description: 'Android store track'
        required: true
        default: 'internal'
        type: choice
        options:
        - production
        - internal
        - beta
        - alpha

jobs:
  deploy-android-app-internal-track:
    runs-on: ubuntu-latest # Ubuntu 최신 버전에서 실행

    steps:
    - uses: actions/checkout@v2 # 저장소 코드를 체크아웃

    - name: Set up Ruby # 루비를 설치합니다
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7' # 필요에 따라 Ruby 버전을 조정하세요.

    - name: Install Fastlane # fastlane을 설치합니다
      run: |
        gem install fastlane
    
    - name: Install Flutter # 플러터 sdk를 설치합니다
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0' # 원하는 Flutter 버전을 설정합니다.

    - name: Create Android Upload Keystore # upload-keystore.jks 파일을 생성합니다
      env: 
        KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        echo $KEYSTORE | base64 --decode > android/app/upload-keystore.jks

    - name: Create Fastlane Credential json file # 스토어 업로드에 필요한 json 파일을 생성합니다.
      env: 
        CREDENTIAL_JSON: ${{ secrets.FASTLANE_CREDENTIAL_JSON_BASE64 }}
      run: |
        echo $CREDENTIAL_JSON | base64 --decode > flutter-todaily-fastlane-f7f196ae76eb.json
        echo "CREDENTIAL_JSON_KEY_PATH=../../flutter-todaily-fastlane-f7f196ae76eb.json" >> $GITHUB_ENV 
    
    - name: Create key.properties file # key.properties 파일을 생성합니다
      run: |
        echo "storeFile=upload-keystore.jks" > android/key.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
        echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" >> android/key.properties
    
    - name: Setup Fastlane env for store track # 플레이스토어 트랙을 환경변수로 등록합니다.
      run: echo "ANDROID_STORE_TRACK=${{ inputs.track }}" >> $GITHUB_ENV 

    - name: Run Fastlane # fastlane deploy 레인을 실행합니다
      run: |
        flutter pub get
        cd android
        fastlane deploy